package com.scottcaruso.activities;

import java.util.ArrayList;

import com.scottcaruso.converters.MasterConverter;
import com.scottcaruso.currencyconverter.R;

import android.os.Bundle;
import android.app.Activity;
import android.content.Intent;
import android.content.pm.ActivityInfo;
import android.util.Log;
import android.view.Menu;
import android.widget.TextView;
import android.widget.Toast;

public class CurrencyActivity extends Activity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_currency);
        //Programatically force the orientation to landscape for the optimal viewing position for the data.
        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
        
        //Prepare to receive a string from the intent, then try to get an intent. If the try fails, the user receives a friendly error message.
        String incomingCurrency = null; 
		try 
		{
			Intent incomingIntent = getIntent();
			//Get the value that is being passed in from the launcher application.
			incomingCurrency = incomingIntent.getExtras().getString("convertedValue");
	        //As long as there wasn't some kind of error in the input...
			if (incomingCurrency != null)
	        {
				//That the incoming value and pass it through the converter
				//NOTE: The converter still uses a DOUBLE, not a String. This is a remnant of the first iteration and wasn't changed because it didn't need to be.
	        	double dollars = Double.valueOf(incomingCurrency);
		        ArrayList<String> thisConversion = MasterConverter.createCurrencyArray(dollars);
		        
		        //Init all of the dollar text views so the currency can be displayed
		        final TextView usd = (TextView) findViewById(R.id.dollar_amt);
		        final TextView euros = (TextView) findViewById(R.id.euro_amt);
		        final TextView aussies = (TextView) findViewById(R.id.ausdol_amt);
		        final TextView canDols = (TextView) findViewById(R.id.can_amt);
		        final TextView hkDols = (TextView) findViewById(R.id.hk_amt);
		        final TextView nzDols = (TextView) findViewById(R.id.nzl_amt);
		        final TextView pounds = (TextView) findViewById(R.id.uk_amt);
		        final TextView krona = (TextView) findViewById(R.id.swe_amt);
		        final TextView francs = (TextView) findViewById(R.id.swz_amt);
		        final TextView won = (TextView) findViewById(R.id.sko_amt);
		        final TextView yen = (TextView) findViewById(R.id.jpn_amt);
		        
		        //We know which position everything is in the ArrayList, so we're just programatically setting them rather than doing a loop or anything. If we ever need to be more dynamic, this would have to change to be a for loop or similar.
		        usd.setText(thisConversion.get(0));
		        euros.setText(thisConversion.get(1));
		        aussies.setText(thisConversion.get(2));
		        canDols.setText(thisConversion.get(3));
		        hkDols.setText(thisConversion.get(4));
		        nzDols.setText(thisConversion.get(5));
		        pounds.setText(thisConversion.get(6));
		        krona.setText(thisConversion.get(7));
		        francs.setText(thisConversion.get(8));
		        won.setText(thisConversion.get(9));
		        yen.setText(thisConversion.get(10));
	       } else
	       {
				Toast toast = Toast.makeText(this, "There was an error with the incoming data. It cannot be displayed.", Toast.LENGTH_SHORT);
				toast.show();
				Log.e("Error","The data that was passed in wasn't correct. Check " + incomingCurrency);
	       }
		} catch (Exception e) {
			Toast toast = Toast.makeText(this, "This application can only be launched from within its companion helper app. Please launch the launcher app first.", Toast.LENGTH_SHORT);
			toast.show();
			Log.e("Error","Application was launched on its own rather than from helper.");
		}
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.currency, menu);
        return true;
    }
    
}
